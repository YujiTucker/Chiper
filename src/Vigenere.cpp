
#include "Vigenere.h"

Vigenere::Vigenere() {
}

Vigenere::~Vigenere() {

}

void Vigenere::showVigenereSqure() {	
	for (int i=0; i<ALPHNUM; i++) {
		for (int j=0; j<ALPHNUM; j++)
			cout << vigenereSqure[i][j];
		cout << "" << endl;
	}
}

void Vigenere::encipher() {
	char str[32];
	for(int i=0; i<strlen(plainText); i++)
		cout << i << endl;
	BOOST_FOREACH( const map_type::value_type x, alphnum)
  {
    cout << boost::format("%1%: %2%\n") % x.first % x.second;
  }
}

void Vigenere::decipher() {

}

const char Vigenere::vigenereSqure[ALPHNUM][ALPHNUM] = {
	"BCDEFGHIJKLMNOPQRSTUVWXYZA",
	"CDEFGHIJKLMNOPQRSTUVWXYZAB",
	"DEFGHIJKLMNOPQRSTUVWXYZABC",
	"EFGHIJKLMNOPQRSTUVWXYZABCD",
	"FGHIJKLMNOPQRSTUVWXYZABCDE",
	"GHIJKLMNOPQRSTUVWXYZABCDEF",
	"HIJKLMNOPQRSTUVWXYZABCDEFG",
	"IJKLMNOPQRSTUVWXYZABCDEFGH",
	"JKLMNOPQRSTUVWXYZABCDEFGHI",
	"KLMNOPQRSTUVWXYZABCDEFGHIJ",
	"LMNOPQRSTUVWXYZABCDEFGHIJK",
	"MNOPQRSTUVWXYZABCDEFGHIJKL",
	"NOPQRSTUVWXYZABCDEFGHIJKLM",
	"OPQRSTUVWXYZABCDEFGHIJKLMN",
	"PQRSTUVWXYZABCDEFGHIJKLMNO",
	"QRSTUVWXYZABCDEFGHIJKLMNOP",
	"RSTUVWXYZABCDEFGHIJKLMNOPQ",
	"STUVWXYZABCDEFGHIJKLMNOPQR",
	"TUVWXYZABCDEFGHIJKLMNOPQRS",
	"UVWXYZABCDEFGHIJKLMNOPQRST",
	"VWXYZABCDEFGHIJKLMNOPQRSTU",
	"WXYZABCDEFGHIJKLMNOPQRSTUV",
	"XYZABCDEFGHIJKLMNOPQRSTUVW",
	"YZABCDEFGHIJKLMNOPQRSTUVWX",
	"ZABCDEFGHIJKLMNOPQRSTUVWXY",
	"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
};

